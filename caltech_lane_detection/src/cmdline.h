/* cmdline.h */

/* File autogenerated by gengetopt version 2.18  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "LinePerceptor"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  char * lanes_conf_arg;	/* Configuration file for lane detection (default='Lanes.conf').  */
  char * lanes_conf_orig;	/* Configuration file for lane detection original value given at command line.  */
  const char *lanes_conf_help; /* Configuration file for lane detection help description.  */
  char * stoplines_conf_arg;	/* Configuration file for stopline detection (default='StopLines.conf').  */
  char * stoplines_conf_orig;	/* Configuration file for stopline detection original value given at command line.  */
  const char *stoplines_conf_help; /* Configuration file for stopline detection help description.  */
  int no_stoplines_flag;	/* Don't detect stop lines (default=on).  */
  const char *no_stoplines_help; /* Don't detect stop lines help description.  */
  int no_lanes_flag;	/* Don't detect lanes (default=off).  */
  const char *no_lanes_help; /* Don't detect lanes help description.  */
  char * camera_conf_arg;	/* Configuration file for the camera paramters (default='CameraInfo.conf').  */
  char * camera_conf_orig;	/* Configuration file for the camera paramters original value given at command line.  */
  const char *camera_conf_help; /* Configuration file for the camera paramters help description.  */
  char * list_file_arg;	/* Text file containing a list of images one per line.  */
  char * list_file_orig;	/* Text file containing a list of images one per line original value given at command line.  */
  const char *list_file_help; /* Text file containing a list of images one per line help description.  */
  char * list_path_arg;	/* Path where the image files are located, this is just appended at the front of each line in --list-file (default='').  */
  char * list_path_orig;	/* Path where the image files are located, this is just appended at the front of each line in --list-file original value given at command line.  */
  const char *list_path_help; /* Path where the image files are located, this is just appended at the front of each line in --list-file help description.  */
  char * image_file_arg;	/* The path to an image.  */
  char * image_file_orig;	/* The path to an image original value given at command line.  */
  const char *image_file_help; /* The path to an image help description.  */
  int wait_arg;	/* Number of milliseconds to show the detected lanes. Put 0 for infinite i.e. waits for keypress. (default='0').  */
  char * wait_orig;	/* Number of milliseconds to show the detected lanes. Put 0 for infinite i.e. waits for keypress. original value given at command line.  */
  const char *wait_help; /* Number of milliseconds to show the detected lanes. Put 0 for infinite i.e. waits for keypress. help description.  */
  int show_flag;	/* Show the detected lines (default=off).  */
  const char *show_help; /* Show the detected lines help description.  */
  int step_flag;	/* Step through each image (needs a keypress) or fall through (waits for --wait msecs) (default=off).  */
  const char *step_help; /* Step through each image (needs a keypress) or fall through (waits for --wait msecs) help description.  */
  int show_lane_numbers_flag;	/* Show the lane numbers on the output image (default=off).  */
  const char *show_lane_numbers_help; /* Show the lane numbers on the output image help description.  */
  char * output_suffix_arg;	/* Suffix of images and results (default='_results').  */
  char * output_suffix_orig;	/* Suffix of images and results original value given at command line.  */
  const char *output_suffix_help; /* Suffix of images and results help description.  */
  int save_images_flag;	/* Export all images with detected lanes to the by appending --output-suffix + '.png' to each input image (default=off).  */
  const char *save_images_help; /* Export all images with detected lanes to the by appending --output-suffix + '.png' to each input image help description.  */
  int save_lanes_flag;	/* Export all detected lanes to a text file by appending --output-suffix + '.txt' to --list-file (default=off).  */
  const char *save_lanes_help; /* Export all detected lanes to a text file by appending --output-suffix + '.txt' to --list-file help description.  */
  int debug_flag;	/* Show debugging information and images (default=off).  */
  const char *debug_help; /* Show debugging information and images help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int lanes_conf_given ;	/* Whether lanes-conf was given.  */
  int stoplines_conf_given ;	/* Whether stoplines-conf was given.  */
  int no_stoplines_given ;	/* Whether no-stoplines was given.  */
  int no_lanes_given ;	/* Whether no-lanes was given.  */
  int camera_conf_given ;	/* Whether camera-conf was given.  */
  int list_file_given ;	/* Whether list-file was given.  */
  int list_path_given ;	/* Whether list-path was given.  */
  int image_file_given ;	/* Whether image-file was given.  */
  int wait_given ;	/* Whether wait was given.  */
  int show_given ;	/* Whether show was given.  */
  int step_given ;	/* Whether step was given.  */
  int show_lane_numbers_given ;	/* Whether show-lane-numbers was given.  */
  int output_suffix_given ;	/* Whether output-suffix was given.  */
  int save_images_given ;	/* Whether save-images was given.  */
  int save_lanes_given ;	/* Whether save-lanes was given.  */
  int debug_given ;	/* Whether debug was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

extern const char *gengetopt_args_info_purpose;
extern const char *gengetopt_args_info_usage;
extern const char *gengetopt_args_info_help[];

int cmdline_parser (int argc, char * const *argv,
  struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);
int cmdline_parser_file_save(const char *filename,
  struct gengetopt_args_info *args_info);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_configfile (char * const filename,
  struct gengetopt_args_info *args_info,
  int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
