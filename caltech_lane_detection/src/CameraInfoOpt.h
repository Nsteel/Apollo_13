/* cameraInfoOpt.h */

/* File autogenerated by gengetopt version 2.18  */

#ifndef CAMERAINFOOPT_H
#define CAMERAINFOOPT_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CAMERAINFOPARSER_PACKAGE
#define CAMERAINFOPARSER_PACKAGE "inversePerspectiveMapping"
#endif

#ifndef CAMERAINFOPARSER_VERSION
#define CAMERAINFOPARSER_VERSION "0.1"
#endif

struct CameraInfoParserInfo
{
  const char *help_help; /* Print help and exit help description.  */
  const char *version_help; /* Print version and exit help description.  */
  double focalLengthX_arg;	/* Focal lenght in horizontal direction in pixels.  */
  char * focalLengthX_orig;	/* Focal lenght in horizontal direction in pixels original value given at command line.  */
  const char *focalLengthX_help; /* Focal lenght in horizontal direction in pixels help description.  */
  double focalLengthY_arg;	/* Focal lenght in vertical direction in pixels.  */
  char * focalLengthY_orig;	/* Focal lenght in vertical direction in pixels original value given at command line.  */
  const char *focalLengthY_help; /* Focal lenght in vertical direction in pixels help description.  */
  double opticalCenterX_arg;	/* X-coordinate of optical center in pixels.  */
  char * opticalCenterX_orig;	/* X-coordinate of optical center in pixels original value given at command line.  */
  const char *opticalCenterX_help; /* X-coordinate of optical center in pixels help description.  */
  double opticalCenterY_arg;	/* Y-coordinate of optical center in pixels.  */
  char * opticalCenterY_orig;	/* Y-coordinate of optical center in pixels original value given at command line.  */
  const char *opticalCenterY_help; /* Y-coordinate of optical center in pixels help description.  */
  double cameraHeight_arg;	/* Height of camera above ground in mm.  */
  char * cameraHeight_orig;	/* Height of camera above ground in mm original value given at command line.  */
  const char *cameraHeight_help; /* Height of camera above ground in mm help description.  */
  double pitch_arg;	/* pitch of camera in degrees (+ve downwards).  */
  char * pitch_orig;	/* pitch of camera in degrees (+ve downwards) original value given at command line.  */
  const char *pitch_help; /* pitch of camera in degrees (+ve downwards) help description.  */
  double yaw_arg;	/* yaw of camera in degrees (+ve clockwise).  */
  char * yaw_orig;	/* yaw of camera in degrees (+ve clockwise) original value given at command line.  */
  const char *yaw_help; /* yaw of camera in degrees (+ve clockwise) help description.  */
  double imageWidth_arg;	/* width of image in pixels.  */
  char * imageWidth_orig;	/* width of image in pixels original value given at command line.  */
  const char *imageWidth_help; /* width of image in pixels help description.  */
  double imageHeight_arg;	/* height of image in pixels.  */
  char * imageHeight_orig;	/* height of image in pixels original value given at command line.  */
  const char *imageHeight_help; /* height of image in pixels help description.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int focalLengthX_given ;	/* Whether focalLengthX was given.  */
  int focalLengthY_given ;	/* Whether focalLengthY was given.  */
  int opticalCenterX_given ;	/* Whether opticalCenterX was given.  */
  int opticalCenterY_given ;	/* Whether opticalCenterY was given.  */
  int cameraHeight_given ;	/* Whether cameraHeight was given.  */
  int pitch_given ;	/* Whether pitch was given.  */
  int yaw_given ;	/* Whether yaw was given.  */
  int imageWidth_given ;	/* Whether imageWidth was given.  */
  int imageHeight_given ;	/* Whether imageHeight was given.  */

} ;

extern const char *CameraInfoParserInfo_purpose;
extern const char *CameraInfoParserInfo_usage;
extern const char *CameraInfoParserInfo_help[];

int cameraInfoParser (int argc, char * const *argv,
  struct CameraInfoParserInfo *args_info);
int cameraInfoParser2 (int argc, char * const *argv,
  struct CameraInfoParserInfo *args_info,
  int override, int initialize, int check_required);
int cameraInfoParser_file_save(const char *filename,
  struct CameraInfoParserInfo *args_info);

void cameraInfoParser_print_help(void);
void cameraInfoParser_print_version(void);

void cameraInfoParser_init (struct CameraInfoParserInfo *args_info);
void cameraInfoParser_free (struct CameraInfoParserInfo *args_info);

int cameraInfoParser_configfile (char * const filename,
  struct CameraInfoParserInfo *args_info,
  int override, int initialize, int check_required);

int cameraInfoParser_required (struct CameraInfoParserInfo *args_info,
  const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CAMERAINFOOPT_H */
